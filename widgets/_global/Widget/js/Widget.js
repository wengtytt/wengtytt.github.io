"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}var __Widget=function(){function a(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,a),this.__holderId=b,this.__settings=c,c.firstImpressionRatio&&this.initFirstImpressionTracking(c.firstImpressionRatio),a.registerWidgetInstance(this)}return _createClass(a,null,[{key:"initClass",value:function initClass(){}}]),_createClass(a,[{key:"render",value:function render(){}},{key:"lazyRender",value:function lazyRender(b){this.needsRendering=!0,this.renderParams=b,a.observeViewportIntersection(this.holder,"100px",0)}},{key:"onMessage",value:function onMessage(){}},{key:"onIntersection",value:function onIntersection(a){var b=a.intersectionRatio;a.isIntersecting&&(this.needsRendering&&(this.needsRendering=!1,this.render(this.renderParams)),this.firstImpressionRatio&&b>=this.firstImpressionRatio&&(this.firstImpressionRatio=0,this.trackEvent("first_impression",b,!0)))}},{key:"trackEvent",value:function trackEvent(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:1,d=!!(2<arguments.length&&void 0!==arguments[2])&&arguments[2];if(this.__settings.tracking){var e=Object.assign({},this.__settings.tracking);d&&(e.non_interaction=!0),e.value=c,a.submitEvent(b,e)}}},{key:"findWidget",value:function findWidget(b){return a.__instances[b]}},{key:"postMessage",value:function postMessage(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof b&&"object"==_typeof(c))return this.findWidget(a).onMessage(b,c,"direct")}},{key:"broadcastMessage",value:function broadcastMessage(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if("string"!=typeof b||"object"!=_typeof(c))return!1;var d=[];for(var e in a.__instances)d[e]=this.findWidget(e).onMessage(b,c,"broadcast");return d}},{key:"find",value:function find(a){return this.holder.querySelector(a)}},{key:"findAll",value:function findAll(a){return this.holder.querySelectorAll(a)}},{key:"addMarkup",value:function addMarkup(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"",d=a.makeMarkupString(b);if(!c)this.holder.insertAdjacentHTML("beforeend",d);else if("string"==typeof c){var e=this.find(c);if(!e)return;e.insertAdjacentHTML("beforeend",d)}else c.insertAdjacentHTML("beforeend",d)}},{key:"setMarkup",value:function setMarkup(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"",d=a.makeMarkupString(b);if(!c)this.holder.innerHTML=d;else if("string"==typeof c){var e=this.find(c);if(!e)return;e.innerHTML=d}else c.innerHTML=d}},{key:"initFirstImpressionTracking",value:function initFirstImpressionTracking(b){this.firstImpressionRatio=b,a.observeViewportIntersection(this.holder,"0px",b)}},{key:"holderId",get:function get(){return this.__holderId}},{key:"holder",get:function get(){return this.__holder||(this.__holder=document.getElementById(this.__holderId)),this.__holder}},{key:"staticClass",get:function get(){return this.constructor}},{key:"className",get:function get(){return this.constructor.name}}],[{key:"observeViewportIntersection",value:function observeViewportIntersection(a,b,c){if("function"==typeof IntersectionObserver){this.observers||(this.observers=[]);var d=b.toString()+":"+c.toString();if(!this.observers[d]){var e=this.makeIntersectionCallback();this.observers[d]=new IntersectionObserver(e,{rootMargin:b,threshold:c})}"string"==typeof a&&(a=document.getElementById(a)),this.observers[d].observe(a)}}},{key:"createIntersectionObserver",value:function createIntersectionObserver(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if("function"!=typeof IntersectionObserver)return!1;var d=this.makeIntersectionCallback(b),e=new IntersectionObserver(d,a);return c&&("string"==typeof c&&(c=document.getElementById(c)),e.observe(c)),e}},{key:"makeIntersectionCallback",value:function makeIntersectionCallback(a){var b=this;return function(c,d){c.forEach(function(c){var e=b.__instances[c.target.id];a?a(c,d,e):e?e.onIntersection(c):b.onStaticIntersection(c,d)})}}},{key:"onStaticIntersection",value:function onStaticIntersection(b,c){var d=b.target.id;if(b.isIntersecting){var e={event_category:"static",event_label:"Holder "+d,value:b.intersectionRatio,non_interaction:!0};a.submitEvent("first_impression",e),c.unobserve(document.getElementById(d))}}},{key:"registerWidgetInstance",value:function registerWidgetInstance(a){this.__instances=this.__instances||{},this.__instances[a.holder.id]=a}},{key:"removeWidgetInstance",value:function removeWidgetInstance(a){delete this.__instances[a]}},{key:"makeMarkupString",value:function makeMarkupString(a){if(Array.isArray(a)){for(var b=[],c=0;c<a.length;c++)b.push(this.makeMarkupString(a[c]));return b.join("")}if("object"==_typeof(a)){var d,e,f,g=[];for(var h in a)d=a[h],"tag"==h?e=d:"data"==h?f=this.makeMarkupString(d):"boolean"==typeof d?d&&g.push(h):g.push(h+"=\""+d+"\"");return e||(e="div"),"<"+e+(g.length?" "+g.join(" "):"")+">"+(void 0===f?"":f)+"</"+e+">"}return a}},{key:"submitEvent",value:function submitEvent(a,b){b.event_label+=";"+(window.location.search||"");var c=document.referrer;c&&(b.event_label+=";"+(c.split("://")[1]||c)),this.submitAnalytics("event",a,b)}},{key:"submitAnalytics",value:function submitAnalytics(a,b,c){window.gtag&&(console.log("Sending analytics",a,b,c),window.gtag(a,b,c))}}]),a}();